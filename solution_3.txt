1. API design - How would you approach implementing breaking changes on API. 

2. API design - nested resources vs flat structure. For example /api/orders/:order_id/order_items vs /api/order_items?order_id=:order_id. Why?

Ans: i would choose nested resources as we can use the many facilites provided by rails and it will be helpfull as well in order to hit the api, query string in url is not consider a  good practise, we can premit the parameter if we use the nested resources


3.  API design - change state of a resource. How would you implement approving order items through API? Describe endpoint and request body.


put /api/orders/:order_id

header bearear token


request body 
{
	order:
	{
	  name: 'updatename',
	  description: 'udpate description'

	}
}


4. Build in house vs use 3rd party service - ie using self hosted Elasticsearch vs SaaS solution like Algolia, bare kubernetes on own cluster vs managed kubernetes (EKS, GKE).

answer: I have experice with Algolia we have used that in previous project it's a good way to searching and result are we fast.

  
5.  You're building passwordless sign in, what top two issues would you anticipate and how would you overcome them?

Ans: the Problem here is to idenfity correct user, so we have achieve that with thhe help of token like jwt, for identification of the authenticate user